apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pcas-cd-pipeline
  namespace: pcas-cd
spec:
  workspaces:
    - name: source-cd
  params:
    - name: url
    - name: revision
    - name: deployment-name
    - name: namespace

  tasks:
    - name: cleanup
      taskRef:
        name: cleanup
      workspaces:
        - name: source-cd
          workspace: source-cd

    - name: clone
      taskRef:
        name: clone
      workspaces:
         - name: source-cd
      runAfter: ["cleanup"]
      params:
         - name: url
           value: "$(params.url)"
         - name: revision
           value: "$(params.revision)"

    - name: apply-k8s-manifest
      taskRef:
        name: apply-k8s-manifest
      workspaces:
        - name: source-cd
          workspace: source-cd
      runAfter: ["clone"]

    - name: health-check
      taskRef:
        name: rollout-health-check
      params:
        - name: deployment-name
          value: "$(params.deployment-name)"
        - name: namespace
          value: "$(params.namespace)"
      runAfter: ["apply-k8s-manifest"]

    - name: pod-readiness
      taskRef:
        name: pod-readiness
      params:
        - name: app-label
          value: "pcas"
        - name: namespace
          value: pcas-cd
      runAfter: ["health-check"]

    - name: validate-resources
      taskRef:
        name: validate-k8s-resources
      params:
        - name: deployment-name
          value: "$(params.deployment-name)"
        - name: service-name
          value: "pcas-service"
        - name: namespace
          value: "$(params.namespace)"
      runAfter: ["pod-readiness"]

    - name: smoke-test
      taskRef:
        name: smoke-test
      params:
        - name: endpoint
          value: "/pcas/health-check"
        - name: service-name
          value: "pcas-service"
        - name: port
          value: "8090"
        - name: namespace
          value: "$(params.namespace)"
      runAfter: ["validate-resources"]
